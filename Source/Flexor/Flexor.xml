<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Flexor</name>
    </assembly>
    <members>
        <member name="T:Flexor.Base.BaseFlexComponent">
            <summary>
            Base class for all Flexor components.
            </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexComponent.Visible">
             <summary>
             Defines when a flex-item is visible.
            
             Default is 'always'.
             </summary>
        </member>
        <member name="T:Flexor.Base.BaseFlexItem">
            <summary>
            Base class for an item to be rendered in a FlexLayout.
            </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexItem.Order">
             <summary>
             Defines the order in which items are rendered within the layout.
            
             Default is 'default'.
             </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexItem.ItemAlignment">
             <summary>
             Defines the alignment of an individual item across the layout's cross axis.
            
             Default is 'inherit'.
             </summary>
        </member>
        <member name="T:Flexor.Base.BaseFlexLayout">
            <summary>
            Base class for all Flexor flex-layouts.
            </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexLayout.Direction">
             <summary>
             Defines the direction in which items are added to the layout.
            
             Default is 'row'.
             </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexLayout.Wrap">
             <summary>
             Items within the flex-layout will wrap on to multiple lines if necessary.
            
             Default is 'false'.
             </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexLayout.JustifyContent">
             <summary>
             Defines the alignment of items across the layout's main axis.
            
             Default is 'start'.
             </summary>
        </member>
        <member name="P:Flexor.Base.BaseFlexLayout.ItemAlignment">
             <summary>
             Defines the alignment of items across the layout's cross axis.
            
             Default is 'stretch'.
             </summary>
        </member>
        <member name="T:Flexor.Direction">
            <summary>
            Defines the direction flex items are placed within a flex-container.
            </summary>
        </member>
        <member name="P:Flexor.Direction.Row">
            <summary>
            Flex items are rendered horizontally in the order they are defined within a container.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Direction.Column">
            <summary>
            Flex items are rendered vertically in the order they are defined within a container.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Direction.RowReverse">
            <summary>
            Flex items are rendered horizontally in the reverse order they are defined within a container.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Direction.ColumnReverse">
            <summary>
            Flex items are rendered vertically in the reverse order they are defined within a container.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="M:Flexor.Direction.Is(Flexor.DirectionOption)">
            <summary>
            Flex items are rendered by default according to the supplied direction.
            Rendering is configurable based on CSS media query breakpoints.
            </summary>
            <param name="direction">The default direction.</param>
            <returns>The flex direction configuration.</returns>
        </member>
        <member name="T:Flexor.DirectionOption">
            <summary>
            Enumeration of ways items can be rendered within a layout.
            </summary>
        </member>
        <member name="F:Flexor.DirectionOption.Row">
            <summary>
            Items within a layout are rendered horizontally.
            </summary>
        </member>
        <member name="F:Flexor.DirectionOption.Column">
            <summary>
            Items within a layout are rendered vertically.
            </summary>
        </member>
        <member name="F:Flexor.DirectionOption.RowReverse">
            <summary>
            Items within a layout are rendered horizontally in reverse order.
            </summary>
        </member>
        <member name="F:Flexor.DirectionOption.ColumnReverse">
            <summary>
            Items within a layout are rendered vertically in reverse order.
            </summary>
        </member>
        <member name="T:Flexor.JustificationOption">
            <summary>
            Enumeration of ways items can be rendered across a layout.
            This impacts items along the layout's primary axis.
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.Start">
            <summary>
            Items are packed along start of the layout's primary axis
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.Center">
            <summary>
            Items are centered around the layout's center-line.
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.End">
            <summary>
            Items are packed along the end of the layout's primary axis.
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.SpaceAround">
            <summary>
            All items are spaced equally apart.
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.SpaceBetween">
            <summary>
            Items are spaced evenly with first and last items in contact
            with the start and end of a layout.
            </summary>
        </member>
        <member name="F:Flexor.JustificationOption.SpaceEvenly">
            <summary>
            All items and layout start and end are spaced equally apart.
            </summary>
        </member>
        <member name="T:Flexor.ItemAlignmentOption">
            <summary>
            Enumeration of ways items can be rendered within a layout.
            This impacts items along the layout's cross axis.
            </summary>
        </member>
        <member name="F:Flexor.ItemAlignmentOption.Start">
            <summary>
            Placed along the start of the cross axis.
            </summary>
        </member>
        <member name="F:Flexor.ItemAlignmentOption.Center">
            <summary>
            Centered along the primary axis.
            </summary>
        </member>
        <member name="F:Flexor.ItemAlignmentOption.End">
            <summary>
            Placed along the end of the cross axis.
            </summary>
        </member>
        <member name="F:Flexor.ItemAlignmentOption.Stretch">
            <summary>
            Stretch to fill the layout
            </summary>
        </member>
        <member name="F:Flexor.ItemAlignmentOption.Baseline">
            <summary>
            Items are aligned such that their baselines align.
            </summary>
        </member>
        <member name="T:Flexor.Breakpoint">
            <summary>
            Enumeration of CSS media query breakpoints.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.None">
            <summary>
            Unspecified on not impacted by media queries.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.Mobile">
            <summary>
            Applicable to device widths of XXX pixels and smaller.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.Tablet">
            <summary>
            Applicable to device widths between XXX and YYY pixels.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.Desktop">
            <summary>
            Applicable to device widths between XXX and YYY pixels.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.Widescreen">
            <summary>
            Applicable to device widths between XXX and YYY pixels.
            </summary>
        </member>
        <member name="F:Flexor.Breakpoint.FullHD">
            <summary>
            Applicable to device widths greater than XXX pixels.
            </summary>
        </member>
        <member name="T:Flexor.ResizabilityOption">
            <summary>
            Enumeration of ways items are allowed to resize within a flex-container.
            </summary>
        </member>
        <member name="F:Flexor.ResizabilityOption.Auto">
            <summary>
            Item will be sized automatically.
            </summary>
        </member>
        <member name="F:Flexor.ResizabilityOption.None">
            <summary>
            Item will not resize.
            </summary>
        </member>
        <member name="F:Flexor.ResizabilityOption.Grow">
            <summary>
            Item is allowed to grow to fill remaining space.
            </summary>
        </member>
        <member name="F:Flexor.ResizabilityOption.NoGrow">
            <summary>
            Item is not allowed to grow.
            </summary>
        </member>
        <member name="F:Flexor.ResizabilityOption.NoShrink">
            <summary>
            Item is not allowed to shrink.
            </summary>
        </member>
        <member name="T:Flexor.SizeUnit">
            <summary>
            Enumeration of sizing units used to describe a flex-item.
            </summary>
        </member>
        <member name="F:Flexor.SizeUnit.Pixels">
            <summary>
            Sized in pixels ('px').
            </summary>
        </member>
        <member name="F:Flexor.SizeUnit.Percent">
            <summary>
            Size is a percentage of the flex-container's main-axis.
            </summary>
        </member>
        <member name="F:Flexor.SizeUnit.Element">
            <summary>
            Size is in CSS elements ('em').
            </summary>
        </member>
        <member name="F:Flexor.SizeUnit.ViewportHeight">
            <summary>
            Size is a representation of viewport height ('vh').
            </summary>
        </member>
        <member name="F:Flexor.SizeUnit.ViewportWidth">
            <summary>
            Size is a representation of viewport width ('vw').
            </summary>
        </member>
        <member name="T:Flexor.WrapOption">
            <summary>
            Enumeration of possibilities which layouts may wrap.
            </summary>
        </member>
        <member name="F:Flexor.WrapOption.NoWrap">
            <summary>
            Items remain on a single line and will overflow.
            </summary>
        </member>
        <member name="F:Flexor.WrapOption.Wrap">
            <summary>
            Items will be distributed across multiple lines if necessary.
            </summary>
        </member>
        <member name="F:Flexor.WrapOption.WrapReverse">
            <summary>
            Items will be distributed across multiple lines if necessary.
            Additional lines will appear before the previous ones.
            </summary>
        </member>
        <member name="T:Flexor.FluentAlignItems">
            <summary>
            Define how items are aligned along a flex-container's cross axis.
            </summary>
        </member>
        <member name="M:Flexor.FluentAlignItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentAlignItems"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentAlignItems.#ctor(Flexor.ItemAlignmentOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentAlignItems"/> class.
            </summary>
            <param name="initialValue">The initial value across all CSS media queries.</param>
        </member>
        <member name="M:Flexor.FluentAlignItems.Is(Flexor.ItemAlignmentOption)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentAlignItems.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentFlexDirection">
            <summary>
            Define the direction items are added to a flex-container.
            </summary>
        </member>
        <member name="M:Flexor.FluentFlexDirection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentFlexDirection"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentFlexDirection.#ctor(Flexor.DirectionOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentFlexDirection"/> class.
            </summary>
            <param name="initialValue">The initial value across all CSS media queries.</param>
        </member>
        <member name="M:Flexor.FluentFlexDirection.Is(Flexor.DirectionOption)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentFlexDirection.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentJustifyContent">
            <summary>
            Define item justification across a flex-container's main axis.
            </summary>
        </member>
        <member name="M:Flexor.FluentJustifyContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentJustifyContent"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentJustifyContent.#ctor(Flexor.JustificationOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentJustifyContent"/> class.
            </summary>
            <param name="initialValue">The initial value across all CSS media queries.</param>
        </member>
        <member name="M:Flexor.FluentJustifyContent.Is(Flexor.JustificationOption)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentJustifyContent.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentOrder">
            <summary>
            Define the order in which an item is displayed in a flex-container.
            </summary>
        </member>
        <member name="M:Flexor.FluentOrder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentOrder"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentOrder.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentOrder"/> class.
            </summary>
            <param name="value">The default item order.</param>
        </member>
        <member name="M:Flexor.FluentOrder.Is(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentOrder.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentResizability">
            <summary>
            Define the ability to resize an item is displayed in a flex-container.
            </summary>
        </member>
        <member name="M:Flexor.FluentResizability.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentResizability"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentResizability.#ctor(Flexor.ResizabilityOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentResizability"/> class.
            </summary>
            <param name="initialValue">The initial <see cref="T:Flexor.ResizabilityOption"/> across all media query breakpoints.</param>
        </member>
        <member name="M:Flexor.FluentResizability.CanGrow">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.CanNotGrow">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.CanNotShrink">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.IsAutomatic">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.IsInitial">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentResizability.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentSize">
            <summary>
            Define the size of an item displayed in a flex-container.
            </summary>
        </member>
        <member name="M:Flexor.FluentSize.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentSize"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentSize.IsElement(System.Decimal)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.IsPercent(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.IsPixels(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.IsViewportHeight(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.IsViewportWidth(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentSize.SetSize(System.Decimal,Flexor.SizeUnit)">
            <inheritdoc/>
        </member>
        <member name="P:Flexor.IFluentVisibleWithValue.And">
            <summary>
            Chains visibility breakpoint conditional.
            </summary>
        </member>
        <member name="T:Flexor.FluentVisible">
            <summary>
            Definition of when a flex-item should be visible.
            </summary>
        </member>
        <member name="M:Flexor.FluentVisible.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentVisible"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentVisible.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentVisible"/> class.
            </summary>
            <param name="initialValue">The initial visibility across all media query breakpoints.</param>
        </member>
        <member name="P:Flexor.FluentVisible.And">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentVisible.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.FluentWrap">
            <summary>
            Define the ability of a flex-container to wrap.
            </summary>
        </member>
        <member name="M:Flexor.FluentWrap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentWrap"/> class.
            </summary>
        </member>
        <member name="M:Flexor.FluentWrap.#ctor(Flexor.WrapOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Flexor.FluentWrap"/> class.
            </summary>
            <param name="initialValue">The initial value across all CSS media queries.</param>
        </member>
        <member name="M:Flexor.FluentWrap.Is(Flexor.WrapOption)">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnDesktop">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnDesktopAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnDesktopAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnFullHD">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnFullHDAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnMobile">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnMobileAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnTablet">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnTabletAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnTabletAndSmaller">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnWidescreen">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnWidescreenAndLarger">
            <inheritdoc/>
        </member>
        <member name="M:Flexor.FluentWrap.OnWidescreenAndSmaller">
            <inheritdoc/>
        </member>
        <member name="T:Flexor.IFluentReactive`1">
            <summary>
            Definition objects are reactive and respond to CSS media query values.
            </summary>
            <typeparam name="TFluent">The object configuration type.</typeparam>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnMobile">
            <summary>
            Specifies that the specified configuration is applicable to mobile devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnMobileAndLarger">
            <summary>
            Specifies that the specified configuration is applicable to mobile and larger devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnTablet">
            <summary>
            Specifies that the specified configuration is applicable to tablet devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnTabletAndLarger">
            <summary>
            Specifies that the specified configuration is applicable to tablet and larger devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnTabletAndSmaller">
            <summary>
            Specifies that the specified configuration is applicable to tablet and smaller devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnDesktop">
            <summary>
            Specifies that the specified configuration is applicable to desktop devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnDesktopAndLarger">
            <summary>
            Specifies that the specified configuration is applicable to desktop and larger devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnDesktopAndSmaller">
            <summary>
            Specifies that the specified configuration is applicable to desktop an smaller devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnWidescreen">
            <summary>
            Specifies that the specified configuration is applicable to widescreen devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnWidescreenAndLarger">
            <summary>
            Specifies that the specified configuration is applicable to widescreen and larger devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnWidescreenAndSmaller">
            <summary>
            Specifies that the specified configuration is applicable to widescreen and smaller devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnFullHD">
            <summary>
            Specifies that the specified configuration is applicable to full HD devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`1.OnFullHDAndSmaller">
            <summary>
            Specifies that the specified configuration is applicable to full HD and smaller devices.
            </summary>
            <returns>The configuration object.</returns>
        </member>
        <member name="T:Flexor.IFluentReactive`2">
            <summary>
            Definition objects are reactive and respond to CSS media query values.
            </summary>
            <typeparam name="TFluent">The object configuration type.</typeparam>
            <typeparam name="TProp">The configuration value type.</typeparam>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnMobile(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to mobile devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnMobileAndLarger(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to mobile and larger devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnTablet(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to tablet devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnTabletAndLarger(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to tablet and larger devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnTabletAndSmaller(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to tablet and smaller devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnDesktop(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to desktop devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnDesktopAndLarger(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to desktop and larger devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnDesktopAndSmaller(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to desktop an smaller devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnWidescreen(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to widescreen devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnWidescreenAndLarger(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to widescreen and larger devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnWidescreenAndSmaller(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to widescreen and smaller devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnFullHD(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to full HD devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:Flexor.IFluentReactive`2.OnFullHDAndSmaller(`1)">
            <summary>
            Specifies that the specified configuration property is applicable to full HD and smaller devices.
            </summary>
            <param name="value">The property to apply.</param>
            <returns>The configuration object.</returns>
        </member>
        <member name="T:Flexor.ItemAlignment">
            <summary>
            Defines how flex-items are laid out along the flex-container's cross axis.
            </summary>
        </member>
        <member name="P:Flexor.ItemAlignment.Start">
            <summary>
            Items are aligned along the start of the flex-container's cross axis.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.ItemAlignment.Center">
            <summary>
            Items are aligned along the center of the flex-container's cross axis.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.ItemAlignment.End">
            <summary>
            Items are aligned along the end of the flex-container's cross axis.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.ItemAlignment.Stretch">
            <summary>
            Items are stretched along the entirety of the flex-container's cross axis.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.ItemAlignment.Baseline">
            <summary>
            Items are aligned as their baseline is aligned.
            Items are rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="M:Flexor.ItemAlignment.Is(Flexor.ItemAlignmentOption)">
            <summary>
            Flex items are rendered by default according to the supplied item alignment.
            Rendering is configurable based on CSS media query breakpoints.
            </summary>
            <param name="value">The default item alignment.</param>
            <returns>The item alignment configuration.</returns>
        </member>
        <member name="T:Flexor.JustifyContent">
            <summary>
            Defines the alignment of items along a flex-container's main axis.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.Start">
            <summary>
            Content is aligned along the start line of the flex-container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.Center">
            <summary>
            Content is centered along the midpoint of the flex-container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.End">
            <summary>
            Content is aligned along the end line of the flex-container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.SpaceAround">
            <summary>
            Content is spaced evenly along the flex container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            The space between container and adjacent items is half the space between items.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.SpaceBetween">
            <summary>
            Content is spaced evenly along the flex container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            Items touch the container's start and end.
            </summary>
        </member>
        <member name="P:Flexor.JustifyContent.SpaceEvenly">
            <summary>
            Content is spaced evenly along the flex container's main axis.
            Content is rendered this way consistently across all CSS media query breakpoints.
            The space between all items and container ends are equal.
            </summary>
        </member>
        <member name="M:Flexor.JustifyContent.Is(Flexor.JustificationOption)">
            <summary>
            Content is rendered by default according to the supplied justification value.
            Rendering is configurable based on CSS media query breakpoints.
            </summary>
            <param name="justification">The default justification value.</param>
            <returns>The justification configuration.</returns>
        </member>
        <member name="T:Flexor.Order">
            <summary>
            Defines the order in which a flex-item is displayed.
            </summary>
        </member>
        <member name="P:Flexor.Order.Default">
            <summary>
            The default order configuration of an item within a flex-container across all CSS media query breakpoints.
            The default order is unspecified, and will honor the definition as defined within the flex-container.
            </summary>
        </member>
        <member name="M:Flexor.Order.Is(System.Int32)">
            <summary>
            The default order configuration of an item within a flex-container across all CSS media query breakpoints.
            </summary>
            <param name="value">The order of the item.</param>
            <returns>The order configuration.</returns>
        </member>
        <member name="T:Flexor.Resizability">
            <summary>
            Defines how flex items react to the resizing of a flex-container.
            </summary>
        </member>
        <member name="P:Flexor.Resizability.Grow">
            <summary>
            Flex item is allowed to grow as there is space available.
            Item resizing ability is applied consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Resizability.Auto">
            <summary>
            Flex item is allowed to resize automatically as there is space available.
            Item resizing ability is applied consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Resizability.NoGrow">
            <summary>
            Flex item is not allowed to grow but can shrink if necessary.
            Item resizing ability is applied consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Resizability.NoShrink">
            <summary>
            Flex item is not allowed to shrink but can grow if necessary.
            Item resizing ability is applied consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.Resizability.Initial">
            <summary>
            Flex item is not allowed to grow or shrink and will retain its initial size.
            Item resizing ability is applied consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="M:Flexor.Resizability.Is(Flexor.ResizabilityOption)">
            <summary>
            Flex item is sized by default according to the supplied resizability value.
            Rendering is configurable based on CSS media query breakpoints.
            </summary>
            <param name="value">The default resizability value.</param>
            <returns>The resizability configuration.</returns>
        </member>
        <member name="T:Flexor.SelfAlignment">
            <summary>
            Defines how an individual flex-item is laid out along the flex-container's cross axis.
            </summary>
        </member>
        <member name="P:Flexor.SelfAlignment.Start">
            <summary>
            The individual item is aligned along the start of the flex-container's cross axis.
            The individual item is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.SelfAlignment.Center">
            <summary>
            The individual item is aligned along the center of the flex-container's cross axis.
            The individual item is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.SelfAlignment.End">
            <summary>
            The individual item is aligned along the end of the flex-container's cross axis.
            The individual item is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.SelfAlignment.Stretch">
            <summary>
            The individual item is stretched along the entirety of the flex-container's cross axis.
            The individual item is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="P:Flexor.SelfAlignment.Baseline">
            <summary>
            The individual item is aligned as their baseline is aligned.
            The individual item is rendered this way consistently across all CSS media query breakpoints.
            </summary>
        </member>
        <member name="M:Flexor.SelfAlignment.Is(Flexor.ItemAlignmentOption)">
            <summary>
            The individual item is rendered by default according to the supplied item alignment.
            Rendering is configurable based on CSS media query breakpoints.
            </summary>
            <param name="value">The default item alignment.</param>
            <returns>The item alignment configuration.</returns>
        </member>
        <member name="T:Flexor.Size">
            <summary>
            Defines the size of an individual flex-item.
            </summary>
        </member>
        <member name="M:Flexor.Size.IsPixels(System.Int32)">
            <summary>
            The flex item's size is defined in pixels.
            </summary>
            <param name="value">The flex item's size defined in pixels.</param>
            <returns>The size configuration.</returns>
        </member>
        <member name="M:Flexor.Size.IsPercent(System.Int32)">
            <summary>
            The flex item's size is defined as a percentage of the parent container.
            </summary>
            <param name="value">The flex item's size defined as a percentage.</param>
            <returns>The size configuration.</returns>
        </member>
        <member name="M:Flexor.Size.IsElement(System.Decimal)">
            <summary>
            The flex item's size is defined in CSS 'em' format.
            </summary>
            <param name="value">The flex item's size defined in 'em' units.</param>
            <returns>The size configuration.</returns>
        </member>
        <member name="M:Flexor.Size.IsViewportWidth(System.Int32)">
            <summary>
            The flex item's size is defined as a proportion of the viewport width 'vw'.
            </summary>
            <param name="value">The flex item's size defined as a proportion of the viewport width.</param>
            <returns>The size configuration.</returns>
        </member>
        <member name="M:Flexor.Size.IsViewportHeight(System.Int32)">
            <summary>
            The flex item's size is defined as a proportion of the viewport height 'vh'.
            </summary>
            <param name="value">The flex item's size defined as a proportion of the viewport height.</param>
            <returns>The size configuration.</returns>
        </member>
        <member name="T:Flexor.Visible">
            <summary>
            Defines the visibility of a flex-item.
            </summary>
        </member>
        <member name="P:Flexor.Visible.Always">
            <summary>
            The item should always be visible.
            </summary>
        </member>
        <member name="P:Flexor.Visible.Only">
            <summary>
            The item is only visible on certain CSS media queries.
            </summary>
        </member>
        <member name="M:Flexor.Visible.When(System.Boolean)">
            <summary>
            The item is visible when a certain condition is met.
            </summary>
            <param name="condition">The condition which should trigger visibility.</param>
            <returns>The visibility configuration.</returns>
        </member>
        <member name="T:Flexor.Wrap">
            <summary>
            Define the ability of a flex-container to wrap.
            </summary>
        </member>
        <member name="P:Flexor.Wrap.NoWrap">
            <summary>
            Items remain on a single line and will overflow.
            </summary>
        </member>
        <member name="P:Flexor.Wrap.CanWrap">
            <summary>
            Items will be distributed across multiple lines if necessary.
            </summary>
        </member>
        <member name="P:Flexor.Wrap.WrapReverse">
            <summary>
            Items will be distributed across multiple lines if necessary.
            Additional lines will appear before the previous ones.
            </summary>
        </member>
        <member name="M:Flexor.Wrap.Is(Flexor.WrapOption)">
            <summary>
            The default order configuration of an item within a flex-container across all CSS media query breakpoints.
            </summary>
            <param name="value">The order of the item.</param>
            <returns>The order configuration.</returns>
        </member>
    </members>
</doc>
